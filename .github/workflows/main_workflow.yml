name: 'Deploy App'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  kubeconfig_job:
    name: 'kubeconfig_job'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./Terraform
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Refresh outputs and get data
    - name: Terraform Refresh
      env:
        TF_VAR_do_token: ${{ secrets.TF_API_TOKEN }}
      run: terraform refresh

    # Get the kubeconfig file of the k8s cluster
    - name: Terraform Output
      run: terraform output -json kubernetes-cluster-prod-1-output | jq -r .raw_config > kubeconfig

    # Upload the kubeconfig file for using it later
    - name: Upload kubeconfig artifcat
      uses: actions/upload-artifact@v4
      with:
        name: kubeconfig_file
        path: ./Terraform/kubeconfig

  deploy_app:
    name: "deploy_app"
    runs-on: ubuntu-latest
    environment: production
    needs: kubeconfig_job

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./Resources
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4   


    - name: testttt
      run: pwd

    - run: ls 

    # Pull the kubeconfig file for using it
    - name: Download kubeconfig artifact
      uses: actions/download-artifact@v4
      with:
        name: kubeconfig_file
        path: ./kubeconfig

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        file: Resources/Dockerfile
        push: true
        tags: nimblewayhomeassignment/nimblewayhomeassignment:latest

      

    
